@{
    
    var genArgs = ((Object)Html.ViewData.Model).GetType().GetGenericArguments();
    if(genArgs .Length >= 1)
    {
    }
    else
    {
        throw new Exception();
    }
    var type = genArgs[0];   
    
    var piDic = type.GetProperties().ToDictionary(c => c.Name);
    var qp = new MvcHelper.QueryPager<Object>(Model);
}


@Html.Partial("Parts/Pager",qp.GetPagerContext(10))


<table class="table table-striped table-bordered table-condensed">
<thead>
    <tr>
        @foreach (var item in piDic.Keys)
        {
            var pi = piDic[item];            
            <th>@pi.Name</th>    
        }
        <th>
        </th>
    </tr>
</thead>
<tbody>
    @foreach (dynamic item in qp.Rows)
    {
        <tr>        
            @foreach (var item2 in piDic.Keys)
            {
                var pi = piDic[item2];
                <td>@pi.GetValue(item,null)</td>    
            }
            <td>
                @Html.ActionLink("詳細", "Details", new { item.Id }, new { @class = "btn" })
                @Html.ActionLink("編集", "Edit", new { item.Id }, new { @class = "btn" })
            </td>
        </tr>
    }
</tbody>
</table>
@Html.Partial("Parts/Pager", qp.GetPagerContext(10))
